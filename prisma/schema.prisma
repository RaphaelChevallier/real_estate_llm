// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(schema: "public")]
}

model User {
  id              String         @id(map: "id") @default(uuid())
  email           String         @unique(map: "email")
  password        String
  company         String
  createdAt       DateTime       @default(now()) @map("created_at")
  firstName       String?        @map("first_name")
  lastName        String?        @map("last_name")
  stripeId        String?        @unique @map("stripe_id")
  isSubscribed    Boolean?       @default(false) @map("is_subscribed")
  availableStates String[]       @default([]) @map("available_states")
  updatedAt       DateTime       @updatedAt @map("updated_at")
  role            Role           @default(USER)
  settings        User_Settings?

  @@map("user")
}

model User_Settings {
  id                 String   @id(map: "settings_id") @default(uuid())
  UserId             String   @unique @map("user_id")
  ResetPasswordToken String?  @map("reset_password_token")
  StrategyParameters Json?    @default("{\"listprice-avm\": 30, \"subjecttoequity\": 10, \"seller-finance-equity\": 90, \"last-purchase-date-subject-to\": 3, \"last-purchase-date-seller-finance\": 10}") @map("strategy_parameters")
  user               User     @relation(fields: [UserId], references: [id])
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@map("user_settings")
}

model UserMessage {
  id        String   @id(map: "message_id") @default(uuid())
  UserId    String   @map("user_id")
  userQuery String?  @map("user_query")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("user_message")
}

model AiMessage {
  id        String   @id(map: "ai_message_id") @default(uuid())
  UserId    String   @map("user_id")
  answer    String?  @map("answer")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("ai_message")
}

enum Role {
  USER
  ADMIN
  INVALID
  EXPIRED
}
